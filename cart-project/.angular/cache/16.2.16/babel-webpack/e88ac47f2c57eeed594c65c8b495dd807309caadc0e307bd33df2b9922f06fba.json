{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { Cart } from '../shared/models/Cart';\nimport { CartItem } from '../shared/models/CartItem';\nimport * as i0 from \"@angular/core\";\nconst CART_KEY = 'Cart';\nexport class CartService {\n  constructor() {\n    this.cart = this.getCartDataFromLocalStorage();\n    this.cartSubject = new BehaviorSubject(this.cart);\n  }\n  addToCart(food) {\n    let cartItem = this.cart.items.find(item => item.food.id === food.id);\n    if (cartItem) {\n      cartItem.quantity++;\n      cartItem.price = cartItem.food.price * cartItem.quantity;\n      this.setCartToLocalStorage();\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n    this.setCartToLocalStorage();\n  }\n  setCartToLocalStorage() {\n    this.cart.totalPrice = this.cart.items.reduce((prevSum, currentItem) => prevSum + currentItem.price, 0);\n    this.cart.totalCount = this.cart.items.reduce((prevSum, currentItem) => prevSum + currentItem.quantity, 0);\n    let cartJson = JSON.stringify(this.cart);\n    localStorage.setItem(CART_KEY, cartJson);\n    this.cartSubject.next(this.cart);\n  }\n  getCartDataFromLocalStorage() {\n    const cartJson = localStorage.getItem(CART_KEY);\n    return cartJson ? JSON.parse(cartJson) : new Cart();\n  }\n  removeItem(items) {\n    let index = this.cart.items.findIndex(item => items.id == item.food.id);\n    let cartItem = this.cart.items[index];\n    // this.cart.items[index].quantity--;\n    cartItem.quantity--;\n    this.cart.items[index].price = cartItem.food.price * cartItem.quantity;\n    if (this.cart.items[index].quantity === 0) {\n      this.cart.items.splice(index, 1);\n    }\n    this.setCartToLocalStorage();\n  }\n  getCarObservable() {\n    return this.cartSubject.asObservable();\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","Cart","CartItem","CART_KEY","CartService","constructor","cart","getCartDataFromLocalStorage","cartSubject","addToCart","food","cartItem","items","find","item","id","quantity","price","setCartToLocalStorage","push","totalPrice","reduce","prevSum","currentItem","totalCount","cartJson","JSON","stringify","localStorage","setItem","next","getItem","parse","removeItem","index","findIndex","splice","getCarObservable","asObservable","factory","ɵfac","providedIn"],"sources":["C:\\Development\\Practise\\Node\\node p1\\cart-project\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Food } from '../shared/models/Food';\nimport { User } from '../shared/models/User';\nimport { Cart } from '../shared/models/Cart';\nimport { CartItem } from '../shared/models/CartItem';\nconst CART_KEY = 'Cart';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  private cart: Cart = this.getCartDataFromLocalStorage();\n  private cartSubject: BehaviorSubject<Cart> = new BehaviorSubject(this.cart);\n  constructor() {}\n\n  addToCart(food: Food): void {\n    let cartItem = this.cart.items.find((item) => item.food.id === food.id);\n    if (cartItem) {\n      cartItem.quantity++;\n      cartItem.price = cartItem.food.price * cartItem.quantity;\n\n      this.setCartToLocalStorage();\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n    this.setCartToLocalStorage();\n  }\n  setCartToLocalStorage() {\n    this.cart.totalPrice = this.cart.items.reduce(\n      (prevSum, currentItem) => prevSum + currentItem.price,\n      0\n    );\n    this.cart.totalCount = this.cart.items.reduce(\n      (prevSum, currentItem) => prevSum + currentItem.quantity,\n      0\n    );\n    let cartJson = JSON.stringify(this.cart);\n    localStorage.setItem(CART_KEY, cartJson);\n    this.cartSubject.next(this.cart);\n  }\n  getCartDataFromLocalStorage() {\n    const cartJson = localStorage.getItem(CART_KEY);\n    return cartJson ? JSON.parse(cartJson) : new Cart();\n  }\n\n  removeItem(items: Food) {\n    let index = this.cart.items.findIndex((item) => items.id == item.food.id);\n\n    let cartItem = this.cart.items[index];\n    // this.cart.items[index].quantity--;\n    cartItem.quantity--;\n    this.cart.items[index].price = cartItem.food.price * cartItem.quantity;\n    if (this.cart.items[index].quantity === 0) {\n      this.cart.items.splice(index, 1);\n    }\n    this.setCartToLocalStorage();\n  }\n\n  getCarObservable(): Observable<Cart> {\n    return this.cartSubject.asObservable();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}